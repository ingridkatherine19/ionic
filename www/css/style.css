/* Empty. Add your own CSS if you like */
/* Utilities */

/*menu*/

.letraAzul{
    color: #015089 !important;
}

.bgAzul{
    background-color:  #015089 !important;
    color: #fff !important;
}
.bar-color{
    background-color: #ff9c3e !important;
    color: #fff;
    border-bottom: 0px solid #ff9c3e;
}

.no-padding{

    padding: 0px ;
}
.no-margin{
    margin: 0px;
}

/*color grafica*/

.cobrar{
    color: #f7464a;
}
.facturado{
    color: #d6d3d3;
}
.cobrado{
    color: #97bbcd;
}

/*card*/

.bgCard{
    background: linear-gradient(to bottom right, #113c86 , #886aea);

}

.bgCard2 {
    background: linear-gradient(to bottom right, #18c34a , #387ef5);
}

.bgCard3{
  background-color: #236e6eb3 !important;
}

.letra{
    color: #ffffff !important;
}

.link {
    color: #116262;
    font-weight: bold;
}

h4 {
    color: #116262;
    font-size: 22px;
    margin-bottom: 16px;
}

h4:first-child {
    border-top: none;
    padding-top: initial;
}

.title-bordered {
    border-top: solid 2px #bbb;
    padding-top: 30px;
}

p {
    color: #555;
    margin: 0 0 25px;
}

.no-border {
    border: none;
}

.static {
    position: static;
}

.bold {
    font-weight: bold;
}

.border-top {
    border-top: solid 1px #ccc;
    padding-top: 30px;
}
.border-bottom {
    border-bottom: solid 1px #ccc;
    padding-top: 30px;
}

.blue-grey-900 {
    background-color: #263238 !important;
    color: #fff;
}
/* Menu */

.menu .bar.bar-header.expanded {
    background-image: url('../img/bgidecon.png');
    background-size: 120%;
    background-position: 0%;
    transition: all .5s ease-in-out;
}

.menu.menu-left * {
    font-weight: bold;
}

.item-radio input:checked ~ .item-content {
    background: transparent;
}

.menu-open .ion-navicon {
    transform: rotate(-360deg);
    -webkit-transition: all 0.2s ease-in-out;
    transition: all 0.2s ease-in-out;
}

.menu-open .ion-navicon:before {
    content: "\f2ca";
}

.item.item-radio .radio-icon {
    opacity: 1;
    -webkit-transition: all 0.2s ease-in-out;
    transition: all 0.2s ease-in-out;
}

.item.item-radio:active .radio-icon {
    opacity: 0;
    transform: scale(1.6);
    -webkit-transition: all 0.1s ease-in-out;
    transition: all 0.1s ease-in-out;
}

.directions.button-bar {
    margin: 0 auto;
    width: 33.333%;
}

.directions.button-bar button {
    line-height: 26px;
}

.ion-arrow-right-c.top-left:before {
    transform: rotate(-135deg);
}

.ion-arrow-right-c.top-right:before {
    transform: rotate(-45deg);
}

.ion-arrow-right-c.bottom-left:before {
    transform: rotate(-225deg);
}

.ion-arrow-right-c.bottom-right:before {
    transform: rotate(45deg);
}

#modal {
    background-color: #ef4e3a;
    border-radius: 100%;
    box-shadow: 0 -6px 12px rgba(0, 0, 0, 0.2);
    position: fixed;
    height: 50%;
    bottom: 0;
    opacity: 0;
    width: 700px;
    -webkit-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
}

.expand #modal {
    background-color: #DBDBDB;
    border-radius: 0;
    border-top: solid 4px #ef4e3a;
    opacity: 1;
    z-index: 9;
}
/* CODE */

.code {
    color: #333;
    font-family: monospace;
    padding: 10px;
    white-space: pre;
}

.code-wrapper {
    padding-bottom: 30px;
    padding-top: 15px;
}

.code-wrapper::before {
    color: #1B5E20;
    font-family: "Ionicons";
    speak: none;
    font-size: 18px;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    text-rendering: auto;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    content: '\f216 ';
}

.code-wrapper.active::before {
    content: '\f207 ';
}

.code-wrapper .toggle {
    color: #4CAF50;
    cursor: pointer;
    display: inline-block;
    font-size: 16px;
    font-weight: bold;
    padding: 10px 8px;
    text-decoration: underline;
}

.code-wrapper .code {
    opacity: 0;
    margin-top: -20px;
    height: 0;
    overflow: hidden;
    position: absolute;
    transition: 0.1s all ease-in-out;
    z-index: 9999999999;
}

.code-wrapper.code-wrapper-last .code {
    position: relative;
}

.code-wrapper.active .code {
    background: #f9f9f9;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.5);
    left: 16px;
    height: initial;
    margin-top: 15px;
    padding: 15px;
    right: 16px;
    opacity: 1;
    transition: 0.3s all ease-in-out;
    width: initial;
}

.popover {
    left: initial !important;
    right: 16px !important;
    top: 16px !important;
}
.platform-android .popover{
margin-top:10px;
}

.positionButton {
  position:absolute !important;
  left:  6% !important;
  z-index:1 !important; 
}

/*progress*/
@import url(https://fonts.googleapis.com/css?family=Expletus+Sans);


/* Styling an indeterminate progress bar */

progress:not(value) {
    /* Add your styles here. As part of this walkthrough we will focus only on determinate progress bars. */
}

/* Styling the determinate progress element */

progress[value] {
    /* Get rid of the default appearance */
    appearance: none;
    
    /* This unfortunately leaves a trail of border behind in Firefox and Opera. We can remove that by setting the border to none. */
    border: none;
    
    /* Add dimensions */
    width: 100%; height: 8px;
    
    /* Although firefox doesn't provide any additional pseudo class to style the progress element container, any style applied here works on the container. */
      background-color: whiteSmoke;
      border-radius: 3px;
      box-shadow: 0 2px 3px rgba(0,0,0,.5) inset;
    
    /* Of all IE, only IE10 supports progress element that too partially. It only allows to change the background-color of the progress value using the 'color' attribute. */
    color: royalblue;
    
    position: relative;
    margin: 0 0 1.5em; 
}

/*
Webkit browsers provide two pseudo classes that can be use to style HTML5 progress element.
-webkit-progress-bar -> To style the progress element container
-webkit-progress-value -> To style the progress element value.
*/

progress[value]::-webkit-progress-bar {
    background-color: whiteSmoke;
    border-radius: 3px;
    box-shadow: 0 2px 3px rgba(0,0,0,.5) inset;
}

progress[value]::-webkit-progress-value {
    position: relative;
    
    background-size: 35px 20px, 100% 100%, 100% 100%;
    border-radius:3px;
    
    /* Let's animate this */
    animation: animate-stripes 5s linear infinite;
}

@keyframes animate-stripes { 100% { background-position: -100px 0; } }

/* Let's spice up things little bit by using pseudo elements. */

progress[value]::-webkit-progress-value:after {
    /* Only webkit/blink browsers understand pseudo elements on pseudo classes. A rare phenomenon! */
    content: '';
    position: absolute;
    
    width:5px; height:5px;
    top:7px; right:7px;
    
    background-color: white;
    border-radius: 100%;
}

/* Firefox provides a single pseudo class to style the progress element value and not for container. -moz-progress-bar */

progress[value]::-moz-progress-bar {
    /* Gradient background with Stripes */
    background-image:
    -moz-linear-gradient( 135deg,
                                                     transparent,
                                                     transparent 33%,
                                                     rgba(0,0,0,.1) 33%,
                                                     rgba(0,0,0,.1) 66%,
                                                     transparent 66%),
    -moz-linear-gradient( top,
                                                        rgba(255, 255, 255, .25),
                                                        rgba(0,0,0,.2)),
     -moz-linear-gradient( left, #09c, #f44);
    
    background-size: 35px 20px, 100% 100%, 100% 100%;
    border-radius:3px;
    
    /* Firefox doesn't support CSS3 keyframe animations on progress element. Hence, we did not include animate-stripes in this code block */
}

/* Fallback technique styles */
.progress-bar {
    background-color: whiteSmoke;
    border-radius: 3px;
    box-shadow: 0 2px 3px rgba(0,0,0,.5) inset;

    /* Dimensions should be similar to the parent progress element. */
    width: 100%; height:20px;
}

.progress-bar span {
    background-color: royalblue;
    border-radius: 3px;
    
    display: block;
    text-indent: -9999px;
}

p[data-value] { 
  
  position: relative; 
}

/* The percentage will automatically fall in place as soon as we make the width fluid. Now making widths fluid. */

p[data-value]:after {
    content: attr(data-value) '%';
    position: absolute; right:0;
}

.html5::-webkit-progress-value,
.python::-webkit-progress-value  {
    /* Gradient background with Stripes */
    background-image:
    -webkit-linear-gradient( 135deg,
                                                     transparent,
                                                     transparent 33%,
                                                     rgba(0,0,0,.1) 33%,
                                                     rgba(0,0,0,.1) 66%,
                                                     transparent 66%),
    -webkit-linear-gradient( top,
                                                        rgba(255, 255, 255, .25),
                                                        rgba(0,0,0,.2)),
     -webkit-linear-gradient( left, #09c, #f44);
}

.css3::-webkit-progress-value,
.php::-webkit-progress-value 
{
    /* Gradient background with Stripes */
    background-image:
    -webkit-linear-gradient( 135deg,
                                                     transparent,
                                                     transparent 33%,
                                                     rgba(0,0,0,.1) 33%,
                                                     rgba(0,0,0,.1) 66%,
                                                     transparent 66%),
    -webkit-linear-gradient( top,
                                                        rgba(255, 255, 255, .25),
                                                        rgba(0,0,0,.2)),
     -webkit-linear-gradient( left, #09c, #ff0);
}

.jquery::-webkit-progress-value,
.node-js::-webkit-progress-value 
{
    /* Gradient background with Stripes */
    background-image:
    -webkit-linear-gradient( 135deg,
                                                     transparent,
                                                     transparent 33%,
                                                     rgba(0,0,0,.1) 33%,
                                                     rgba(0,0,0,.1) 66%,
                                                     transparent 66%),
    -webkit-linear-gradient( top,
                                                        rgba(255, 255, 255, .25),
                                                        rgba(0,0,0,.2)),
     -webkit-linear-gradient( left, #09c, #690);
}

/* Similarly, for Mozillaa. Unfortunately combining the styles for different browsers will break every other browser. Hence, we need a separate block. */


.php::-webkit-progress-value { 
  background-image:
       -webkit-linear-gradient(-45deg, 
                               transparent 33%, rgba(0, 0, 0, .1) 33%, 
                               rgba(0,0, 0, .1) 66%, transparent 66%),
       -webkit-linear-gradient(top, 
                               #feb447, 
                               #983844),
       -webkit-linear-gradient(left, #09c, #f44);

    border-radius: 2px; 
    background-size: 35px 20px, 100% 100%, 100% 100%;
}

/*progress[value]::-webkit-progress-value { 
  background-image:
       -webkit-linear-gradient(-45deg, 
                               transparent 33%, rgba(0, 0, 0, .1) 33%, 
                               rgba(0,0, 0, .1) 66%, transparent 66%),
       -webkit-linear-gradient(top, 
                               #feb447, 
                               #983844),
       -webkit-linear-gradient(left, #09c, #f44);

    border-radius: 2px; 
    background-size: 35px 20px, 100% 100%, 100% 100%;
}*/

.css3::-moz-progress-bar,
.php::-moz-progress-bar {
{
    /* Gradient background with Stripes */
    background-image:
    -moz-linear-gradient( 135deg,
                                                     transparent,
                                                     transparent 33%,
                                                     rgba(0,0,0,.1) 33%,
                                                     rgba(0,0,0,.1) 66%,
                                                     transparent 66%),
    -moz-linear-gradient( top,
                                                        rgba(255, 255, 255, .25),
                                                        rgba(0,0,0,.2)),
     -moz-linear-gradient( left, #09c, #ff0);
}

.jquery::-moz-progress-bar,
.node-js::-moz-progress-bar {
    /* Gradient background with Stripes */
    background-image:
    -moz-linear-gradient( 135deg,
                                                     transparent,
                                                     transparent 33%,
                                                     rgba(0,0,0,.1) 33%,
                                                     rgba(0,0,0,.1) 66%,
                                                     transparent 66%),
    -moz-linear-gradient( top,
                                                        rgba(255, 255, 255, .25),
                                                        rgba(0,0,0,.2)),
     -moz-linear-gradient( left, #09c, #690);
}


/* Now we are good to duplicate html code for other skills and then add the css code for the new skill based on data-skill */

  
/* THE END */